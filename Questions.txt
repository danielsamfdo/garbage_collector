What are the other Conditions that can or need to be checked for identifying a pointer assuming that endHeap is updated 
when a new object is allocated from the SourceHeap

GCMalloc<SourceHeap>::isPointer(void * p){
  if(startHeap<= p && p<=endHeap){
    // tprintf("checking @ is within @ and @",(size_t)&p, (size_t)&startHeap, (size_t)&endHeap);
    return true;
  }
  return false;
}



bytesAllocatedSinceLastGC -> should be updated based on whenever i get an object from source heap ?


Say if i find an access to q

Sweep():
  Going through Allocated Objects
    if(something is marked):
      clear marked objec
    else:
      privateFree()



char  * s  = malloc(100);

s  = s+1000; //within bounds of start and end heap and points to a header on the free list 
In mark phase we mark it 
In sweep phase we only go thro allocated Objects
So that header on free list will never be garbage collected. Is this fine ?


int main(){
void * p;
if(true){
  char * m = malloc(256);
  p = m;
}
char * m2 = malloc(1000); // GC is triggered
// 
return 0
}

m is still live right after GC is triggered ???? 



